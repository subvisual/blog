#!/usr/bin/env ruby

require "pry"
require "fileutils"
require "json"
require "yaml"
require "date"

AUTHORS = YAML.load_file("data/authors.yaml")

all_posts = Dir.glob("pages/posts/**/*.md").map do |file|
  begin
    YAML.load_file(file)
  rescue Exception => e
    require 'pry'; binding.pry
  end
end.sort_by do |post|
  Date.parse(post["date"])
end.reverse

FileUtils.mkdir_p("data/_generated")
FileUtils.mkdir_p("pages/tags")
FileUtils.mkdir_p("pages/authors")
FileUtils.mkdir_p("public")

# output all posts
File.open("data/_generated/all_posts.json", "w") do |file|
  file.write(JSON.pretty_generate(all_posts))
end

# output most recent posts
File.open("data/_generated/recent_posts.json", "w") do |file|
  posts = all_posts.take(20)

  file.write(JSON.pretty_generate(posts))
end

# output 2 recent posts for API endpoint
# File.open("pages/posts.json", "w") do |file|
#   posts = all_posts.take(2)

#   posts_with_nested_author = posts.map do |post|
#     new_post = post.clone
#     new_post["author"] = AUTHORS[post["author"]]
#     new_post
#   end

#   file.write(posts_with_nested_author.to_json)
# end

# output tag pages
all_tags = all_posts.
  flat_map { |json| json["tags"] }.
  uniq

all_tags.each do |tag|
  posts = all_posts.select { |post| post["tags"].include?(tag) }

  File.open("pages/tags/#{tag}.json", "w") do |file|
    file.write(JSON.pretty_generate(posts))
  end
end

# output author pages
all_authors = all_posts.
  flat_map { |json| json["author"] }.
  uniq

all_authors.each do |author|
  posts = all_posts.select { |post| post["author"] == author }

  File.open("pages/authors/#{author}.json", "w") do |file|
    file.write(JSON.pretty_generate(posts))
  end
end

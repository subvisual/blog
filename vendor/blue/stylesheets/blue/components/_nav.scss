// Nav
//
// Navigation element.
// Shows only the first item and aligns it to the right when on a mobile resolution.
// Lays out every element except the first (which is hidden) from right to left with equal spacing when on a desktop resolution.
//
// default - Nav with a transparent background
// .Nav--light - Uses a lighter color in the nav links
// .Nav--transparent - Uses white for all nav links, with transparency for all but the active one. To be used when there's one selected item, and a strong color or image background
// Nav--fixed - Affixes the nav to the top of the viewport and applies a background color for better readability
// .Nav--topPositioned - Absolutely positions the nav to the top of its relative container
// .Nav--hint - Affixes the nav to the top, adds a drop shadow to hint the user about the existence of the header
//
// markup:
// <nav aria-label="Main navigation" class="Nav {$modifiers}">
//   <div class="Nav-logoWrapper">
//     <div class="Nav-logo">Logo</div>
//   </div>
//   <ul class="Nav-items">
//     <li class="Nav-item"></li>
//     <li class="Nav-item">
//       <a class="Nav-link" href="#">Work</a>
//     </li>
//     <li class="Nav-item is-selected">
//       <a class="Nav-link" href="#">Company</a>
//     </li>
//   </ul>
// </nav>
//
// sg-wrapper:
// <div style="background-color: rgba(0,0,0,0.1); height: 300px;">
//   <sg-wrapper-content/>
//   <div style="background-color: rgba(0,0,0,0.2); height: 400px;"></div>
// </div>
//
// Styleguide 1.15

@import '../reset';
@import '../theme_vars';

$Nav-item-color-hover: $Theme-color-yellowOrange;

.Nav {
  z-index: 1;

  display: flex;
  justify-content: space-between;

  width: 100%;
  height: $Theme-nav-height-mobile;
  padding: 0 $Theme-spacing-default;

  background: transparent;

  // scss-lint:disable VendorPrefix
  -webkit-transform: translateZ(0);
  // scss-lint:enable VendorPrefix
  transition: background-color 0.2s ease-in-out;
}

.Nav.Nav--topPositioned {
  position: absolute; // TODO: see if this behaviour can be achieved without having it in the actual component
  top: 0;
}

.Nav.Nav--fixed {
  position: fixed;
  top: 0;
  z-index: $Theme-layer-stickyElement;

  background: $Theme-color-white;
  box-shadow: 0 2px 11px rgba(0, 0, 0, 0.1);

  animation-duration: 0.3s;
  animation-name: slidedown;

  @keyframes slidedown {
    from {
      transform: translateY(-$Theme-nav-height-mobile);
    }

    to {
      transform: translateY(0);
    }
  }

  &.Nav--animateUp {
    animation-duration: 0.3s;
    animation-name: slideup;

    @keyframes slideup {
      from {
        transform: translateY(0);
      }

      to {
        transform: translateY(-$Theme-nav-height-mobile);
      }
    }
  }
}

.Nav.Nav--light {
  &:not(.Nav--fixed) {
    .Nav-link {
      color: $Theme-color-white;
    }
  }

  .Nav-item:hover,
  .Nav-item.is-selected {
    .Nav-link {
      color: $Nav-item-color-hover;
    }
  }
}

.Nav.Nav--hint {
  position: fixed;
  top: -$Theme-nav-height-mobile;

  box-shadow: 0 3px 11px rgba(0, 0, 0, 0.2);
}

.Nav-link {
  @include font-properties(subvisual, small);
  flex: 1 0 auto;

  color: $Theme-color-poloBlue;

  font-weight: $Theme-typography-fontWeight-bold;
  text-decoration: none;
  text-transform: uppercase;

  transition: color 0.2s ease-in-out;

  @include media('>tablet') {
    line-height: $Theme-nav-height-desktop;
  }
}

.Nav-logo {
  display: flex;
  align-items: center;
}

.Nav-items {
  display: flex;
  justify-content: flex-end;
}

.Nav-item {
  display: flex;
  flex-direction: column;
  justify-content: center;

  margin-left: $Theme-spacing-small;

  border-top: 5px solid transparent;
  border-bottom: 5px solid transparent;
  cursor: pointer;

  transition: border-color 0.2s ease-in-out;

  &:hover,
  &.is-selected {
    border-bottom: 5px solid $Nav-item-color-hover;

    .Nav-link {
      color: $Nav-item-color-hover;
    }
  }

  @include media('>desktop') {
    margin-left: $Theme-spacing-default;
  }
}

.Nav-menu {
  display: none;

  cursor: pointer;
}

.Nav.Nav--transparent:not(.Nav--fixed) {
  .Nav-link {
    color: $Theme-color-white;
  }

  .Nav-item:not(.is-selected) {
    opacity: 0.6;
  }

  .Nav-item:hover,
  .Nav-item.is-selected {
    border-bottom-color: $Theme-color-white;

    .Nav-link {
      color: $Theme-color-white;
    }
  }
}

.Nav-menu,
.Nav-link {
  padding-right: $Theme-spacing-small;
  padding-left: $Theme-spacing-small;
  margin-right: -$Theme-spacing-small;
  margin-left: -$Theme-spacing-small;
}

@include media('>smallDesktop') {
  .Nav {
    height: $Theme-nav-height-desktop;
  }

  .Nav.Nav--fixed {
    @keyframes slidedown {
      from {
        transform: translateY(-$Theme-nav-height-desktop);
      }

      to {
        transform: translateY(0);
      }
    }

    &.Nav--animateUp {
      @keyframes slideup {
        from {
          transform: translateY(0);
        }

        to {
          transform: translateY(-$Theme-nav-height-desktop);
        }
      }
    }
  }

  .Nav.Nav--hint {
    top: -$Theme-nav-height-desktop;
  }

  .Nav-items {
    height: $Theme-nav-height-desktop;
  }

  .Nav-item:not(:first-child) {
    display: flex;
    align-items: center;
  }
}

@include media('<=smallDesktop') {
  .Nav {
    padding: 0 $Theme-spacing-small;
  }

  .Nav.is-open {
    position: fixed;
    top: 0;
    left: 0;

    background-color: $Theme-color-white;
  }

  .Nav-itemsWrapper {
    display: none;
  }

  .Nav-menu {
    display: flex;
    align-items: center;
  }
}

@include media('<=desktop') {
  .Nav-link {
    padding-right: $Theme-spacing-xSmall;
    padding-left: $Theme-spacing-xSmall;
    margin-right: -$Theme-spacing-xSmall;
    margin-left: -$Theme-spacing-xSmall;
  }
}

// HorizontalGrid
//
// Lays out components side by side all in one row and each cell with equal width.<br>
// Can limit its width to a threshold and center itself with the viewport.<br>
// Can even add a border to the grid.
//
// default - Full width and borderless
// .HorizontalGrid--limited - Limits the grid width to 1280px and centers itself
// .HorizontalGrid--inverted - Swaps the first and last cells places only on desktop
// .HorizontalGrid--lightFrame - Adds a light colored inner border
// .HorizontalGrid--darkFrame - Adds a dark colored inner border
// .HorizontalGrid--topFrame - Adds a top border
// .HorizontalGrid--bottomFrame - Adds a bottom border
// .HorizontalGrid--withGutters - Applies gutters
// .HorizontalGrid--noOuterGutters - Removes gutters from the edges, leaving only inner gutters
// .HorizontalGrid--withExtraSmallGutters - Applies extra smaller gutters
// .HorizontalGrid--withLargeGutters - Applies larger gutters
// .HorizontalGrid--variableWidth - Each cell has the width defined by its content
// .HorizontalGrid--noStack - Doesn't stack children on mobile resolutions
// .HorizontalGrid--centered - Centers vertically and horizontally all cells
// .HorizontalGrid--centeredOnNonMobile - Same as .HorizontalGrid--centered but only on non mobile resolutions
//
// markup:
// <div class="HorizontalGrid {$modifiers}">
//   <div class="HorizontalGrid-cell">
//     <div>Cell 1</div>
//   </div>
//   <div class="HorizontalGrid-cell">
//     <div>Cell 2</div>
//   </div>
//   <div class="HorizontalGrid-cell">
//     <div>Cell 3</div>
//   </div>
// </div>
//
// sg-wrapper:
// <div class="styleguide-grid-unit">
//   <sg-wrapper-content/>
// </div>
//
// Styleguide 1.13

@import '../reset';
@import '../theme_vars';

$HorizontalGrid-border-width: 1px;

@mixin HorizontalGrid-frameStyles($color) {
  &.HorizontalGrid--topFrame {
    border-top: $HorizontalGrid-border-width solid $color;
  }

  &.HorizontalGrid--bottomFrame {
    border-bottom: $HorizontalGrid-border-width solid $color;
  }

  @include media('<=tablet') {
    .HorizontalGrid-cell:not(:last-child) {
      border-bottom: $HorizontalGrid-border-width solid $color;
    }
  }

  @include media('>tablet') {
    .HorizontalGrid-cell:not(:first-child) {
      border-left: $HorizontalGrid-border-width solid $color;
    }
  }
}

.HorizontalGrid {
  display: flex;
  flex-direction: column;

  width: 100%;

  @include media('>tablet') {
    flex-direction: row;
  }
}

.HorizontalGrid.HorizontalGrid--limited {
  max-width: $Theme-grid-maxWidth;
  margin-right: auto;
  margin-left: auto;
}

.HorizontalGrid.HorizontalGrid--lightFrame {
  @include HorizontalGrid-frameStyles($Theme-color-white);
}

.HorizontalGrid.HorizontalGrid--darkFrame {
  @include HorizontalGrid-frameStyles($Theme-color-polar);
}

.HorizontalGrid.HorizontalGrid--variableWidth {
  .HorizontalGrid-cell {
    flex: 0 0 auto;
  }
}

.HorizontalGrid.HorizontalGrid--centered {
  align-items: center;
  justify-content: center;
}

.HorizontalGrid.HorizontalGrid--centeredOnNonMobile {
  @include media('>=tablet') {
    align-items: center;
    justify-content: center;
  }
}

.HorizontalGrid.HorizontalGrid--withGutters {
  $halfGutterSize: $Theme-spacing-small;

  .HorizontalGrid-cell {
    padding: 0 $halfGutterSize;
  }

  @include media('>=tablet') {
    padding: 0 $halfGutterSize;
  }
}

.HorizontalGrid.HorizontalGrid--withExtraSmallGutters {
  $halfGutterSize: $Theme-spacing-xSmall;

  .HorizontalGrid-cell + .HorizontalGrid-cell {
    padding-top: $Theme-spacing-small;
  }

  @include media('>=tablet') {
    padding: 0 $halfGutterSize;

    .HorizontalGrid-cell {
      padding: 0 $halfGutterSize;
    }

    .HorizontalGrid-cell + .HorizontalGrid-cell {
      padding-top: 0;
    }
  }
}

.HorizontalGrid.HorizontalGrid--withLargeGutters {
  $halfGutterSize: $Theme-spacing-default;

  .HorizontalGrid-cell {
    padding: 0 $halfGutterSize;
  }

  @include media('>=tablet') {
    padding: 0 $halfGutterSize;
  }
}

.HorizontalGrid.HorizontalGrid--noOuterGutters {
  padding: 0;

  .HorizontalGrid-cell:first-child {
    padding-left: 0;
  }

  .HorizontalGrid-cell:last-child {
    padding-right: 0;
  }
}

@include media('>tablet') {
  .HorizontalGrid.HorizontalGrid--inverted {
    .HorizontalGrid-cell:first-child {
      order: 2;
    }

    .HorizontalGrid-cell:last-child {
      order: 1;
    }
  }
}

.HorizontalGrid-cell {
  flex: 1 0 0%;
  display: flex;
  flex-direction: column;

  @include media('<=tablet') {
    flex-grow: 0;
    flex-basis: auto;
  }
}

.HorizontalGrid.HorizontalGrid--noStack {
  flex-direction: row;
}
